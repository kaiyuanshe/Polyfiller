version: "3"
networks:
  polyfiller:

services:
  autoheal:
    image: willfarrell/autoheal:1.2.0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always

  myjfs-format:
    image: juicedata/mount:latest
    depends_on:
      - meta-server
    command: juicefs format --storage wasb --bucket   ${BUCKET} --access-key=${ACCESS_KEY}  --secret-key=${SECRET_KEY}    postgres://postgres:${SECRET_KEY}@meta-server:5432/postgres  myjfs
    devices:
      - /dev/fuse
    networks:
      - polyfiller

  myjfs:
    image: juicedata/mount:latest
    depends_on:
      - meta-server
      - myjfs-format
    privileged: true
    command: juicefs mount   postgres://postgres:${SECRET_KEY}@meta-server:5432/postgres  myjfs /mnt
    volumes:
      - /mnt
    networks:
      - polyfiller

  meta-server:
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${SECRET_KEY}
    volumes:
      - ./data:/var/lib/postgresql/data/
    networks:
      - polyfiller
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      retries: 5
    labels:
      - autoheal=true
    restart: always


  api-service:
    depends_on:
      - autoheal
      - meta-server
    image: polyfiller/api-service
    environment:
      - NODE_ENV=production
    volumes:
      - /mnt:/tmp/@wessberg/polyfiller
    networks:
      - polyfiller
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/ || exit 1"]
      interval: 3s
      retries: 5
      start_period: 30s
    labels:
      - autoheal=true
    restart: always
    logging:
      driver: json-file
      options:
        max-size: 10m
